<?xml version="1.0" encoding="UTF-8"?>
<!--
Feel free to change the project build.  When you do so, please drop aidan@phoric.eu
a mail to pull from your branch.
-->
<project name="iCircles" default="dist" basedir=".">
    <description>
Build, test, run and package iCircles.
    </description>
    <!-- set global properties for this build -->
    <property name="src"   location="src"/>
    <property name="test"  location="test"/>
    <property name="build" location="build/classes"/>
    <property name="dist"  location="build"/>
    <property name="lib"   location="lib"/>
    <property name="api.docs" location="docs/api"/>
    <property name="debug.build" value="true"/>

    <path id="classpath.build">
      <fileset id="build.fileset" dir="${lib}">
	<include name="batik-all.jar" />
	<include name="xml-apis.jar" />
	<include name="xml-apis-ext.jar" />
	<include name="jackson-core-2.1.0.jar" />
	<include name="jackson-annotations-2.1.0.jar" />
	<include name="jackson-databind-2.1.0.jar" />
	<include name="commons-cli-1.2.jar" />
        <!-- TODO: move commons-lang3 to classpath.test -->
        <include name="commons-lang3-3.1.jar"/>
      </fileset>
    </path>

    <path id="classpath.test">
      <fileset dir="${lib}">
        <!-- Pull in Hamcrest, before JUnit -->
        <include name="hamcrest-all-1.3.jar"/>
	<!-- Pull in JUnit -->
	<include name="junit4.jar"/>
	<!-- Ensure ant has the JUnit taskdef -->
	<include name="ant-junit.jar"/>
	<!-- Pull in JCheck -->
	<include name="jcheck-0.1.jar"/>
      </fileset>
      <fileset refid="build.fileset" />
      <pathelement location="${build}" />
    </path>

    <!-- Many people will have JUnit on their system. However, this ensures
	 that iCircles builds on a system with minimal dependancies.
    -->
    <taskdef name="junit"
	     classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
    </taskdef>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
	<mkdir dir="${api.docs}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source" >
        <!-- Compile the java code from ${src} into ${build} -->
	<!-- TODO: make the classpath an Ant Path -->
        <javac srcdir             = "${src}"
        	destdir           = "${build}"
        	debug             = "${debug.build}"
        	includeantruntime = "false"
        	source="1.6"
        	target="1.6"
        	>
          <classpath refid="classpath.build" />
	</javac>
    </target>

    <target name="test" depends="compile"
	    description="test the project" >
      <javac srcdir            = "${test}"
	     destdir           = "${build}"
	     debug             = "${debug.build}"
         encoding          = "UTF-8"
	     includeantruntime = "false">
	<classpath refid="classpath.test" />
      </javac>
    </target>

    <target name="run-test" depends="test"
	    description="run the project tests" >
      <junit printsummary="yes" fork="yes" haltonfailure="yes">
        <classpath refid="classpath.test" />

        <formatter type="plain"/>
        <test name="icircles.abstractDescription.TestCurveLabel" />
        <test name="icircles.abstractDescription.TestAbstractCurve" />
        <test name="icircles.abstractDescription.TestAbstractBasicRegion" />
        <test name="icircles.abstractDescription.TestAbstractDescription" />

        <test name="icircles.concreteDiagram.TestConcreteDiagram" />

        <test name="icircles.input.TestSpider" />
      	<test name="icircles.input.TestInputParser" />
      </junit>
    </target>

    <target name="doc" depends="compile" >
       <javadoc packagenames="icircles.*"
           sourcepath="src"
           excludepackagenames="icircles.test.*"
           defaultexcludes="yes"
           destdir="${api.docs}"
           author="true"
           version="true"
           use="true"
           windowtitle="iCircles API">
	 <doctitle><![CDATA[<h1>iCircles API</h1>]]></doctitle>
	 <bottom><![CDATA[<i>Copyright &#169; 2011--2013 iCircles authors. All Rights Reserved.</i>]]></bottom>
       </javadoc>
    </target>

    <target name="dist" depends="compile, test"
            description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Package the Source with the Classes, needed for Jackson type information -->
        <copy todir="${build}">
            <fileset dir="${src}"/>
        </copy>
        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/iCircles.jar" basedir="${build}"/>
    </target>

    <target name="clean"
            description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${api.docs}"/>
    </target>
</project>
